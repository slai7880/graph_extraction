# Sha Lai
# 10/9/2016
# This file stores all the constants.
# Modify at your risk.
# Lines starting with # will be ignored when this file is being read.

# Default directories of the input files.
GRAPH_PATH = 'graph_input' + str(sep)
TEMPLATE_PATH = 'vertex_example' + str(sep)
DATA_PATH = 'data_input' + str(sep)


# Some default window names.
GRAPH = "Graph"
TEMPLATE = "Template"
VERTICES = "Vertices"
VERTICES_W_LBL = "Vertices with Labels"
OUTPUT = "Output"
NOISE_REDUCTION = "Noise Reduction"
NODES = "Nodes"

# The input indicating that the step is complete, only used to test uesr input.
DONE = 'done'
CLOSE = 'x'

# The place holding tuple used for some undetermined coordinate or elements
# pending to be removed or to be ignored.
PLACE_HOLDER_INT = -1
PLACE_HOLDER_COOR = (-1, -1)
PLACE_HOLDER_EDGE = [-1, -1]

# The relative position of the label of each node when displaying them.
# Alternatively if REL_POS = 'MIDDLE' is active, then the label will be placed
# around the middle of the frames.
#REL_POS = (20, 15)
REL_POS = 'MIDDLE'

# The starting index of the vertices or edges when they are displayed and when
# the user is providing indices.
BASE = 1

# When extracting the edges, nodes must be blocked, this number affects the
# size of each block, so it may also affect the accuracy of the process.
SCALE_PERCENTAGE = 0

# This constant is the threshold factor of the ditance between an end point of
# an edge and the center of a node, a value greater than 1 is recommended. Feel
# free to increase this value if there exists some undetected edges.
TOLERANCE_FACTOR = 1.1

# The following two constants is relavant to how to distinguish the background
# and the contents. If METHOD is 'STATIC' then the value of THRESHOLD will
# serve as a break point. Otherwise the program will use the most common color
# on the image to be the background color.
METHOD = 'DYNAMIC'
#METHOD = 'STATIC'
THRESHOLD = 127

# Indicating the font properties of the numbers displayed on the image.
FONT_COLOR = (0, 0, 255)
FONT_COLOR_G = (FONT_COLOR[-1], 0, FONT_COLOR[0])
THICKNESS_BASE = 1 # must be an integer
FONTSIZE_BASE = 0.1

# Indicating the label(rectangle) properties.
RECT_COLOR_C = (255, 255, 255) # for cropping, in an order Blue-Green-Red, as opposed to RGB
RECT_COLOR = (0, 0, 255) # for labeling
RECT_THICKNESS = 2 # must be an integer

# The default shape and size of the kernel when performing erosion/dilation and
# the times they will be performed, these values depend on the quality of an
# image.
KERNEL_SHAPE = "RECT"
KERNEL_SIZE = (5, 5)
KERNEL_STR_MAP = {'c' : "CROSS", 'C' : "CROSS", 'e' : "ELLIPSE", 'E' : "ELLIPSE", 'r' : "RECTANGLE", 'R' : "RECTANGLE"}

# The default iteration amounts of each type of operations.
DILATION_ITR = 0
EROSION_ITR = 0

# Indicating how wide the normal distribution should be.
SIGMA = 2
MU = 4

# Indicating the max value in a binary image.
BIN_MAX = 1

# More printing statements if True.
DEBUG_MODE = False

# Indicating the default saved image's suffix.
SUFFIX = ".png"

# for GUI only
OUTPUT_FONT = 8
GRAPH_SIZE_MAX = (1024, 768)
OUTPUT_CONSOLE_HEIGHT = 200

# These are trackbar constants.
THRESHOLD_INIT = 0
THRESHOLD_MAX = 255
TRACKBAR_THRESHOLD = "Threshold"
FONTSIZE_INIT = 5
FONTSIZE_MAX = 10
TRACKBAR_FONTSIZE = "Size"
THICKNESS_INIT = 1
THICKNESS_MAX = 4
TRACKBAR_THICKNESS = "Thickness"
R_FACTOR_INIT = 10
R_FACTOR_MAX = 20
TRACKBAR_RFACTOR = "Factor"

# This is used in method3 to group the nodes.
RADIUS_COEFFICIENT = 2

# End of log recording.
END_OF_FUNCTION = "============ eof ============"